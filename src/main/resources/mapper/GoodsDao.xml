<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.GoodsDao">
    <resultMap id="BaseResultMap" type="com.model.Goods">
        <id column="goodsid" jdbcType="INTEGER" property="goodsid"/>
        <result column="goodsname" jdbcType="VARCHAR" property="goodsname"/>
        <result column="goodsimg" jdbcType="VARCHAR" property="goodsimg"/>
        <result column="goodscontent" jdbcType="VARCHAR" property="goodscontent"/>
        <result column="goodsprice" jdbcType="INTEGER" property="goodsprice"/>
        <result column="goodsstock" jdbcType="INTEGER" property="goodsstock"/>
    </resultMap>
    <sql id="Base_Column_List">
        goodsid, goodsname, goodsimg, goodscontent, goodsprice, goodsstock
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from goods
        where goodsid = #{goodsid,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from goods
        where goodsid = #{goodsid,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="goodsid" keyProperty="goodsid" parameterType="com.model.Goods"
            useGeneratedKeys="true">
        insert into goods (goodsname, goodsimg, goodscontent,
                           goodsprice, goodsstock)
        values (#{goodsname,jdbcType=VARCHAR}, #{goodsimg,jdbcType=VARCHAR}, #{goodscontent,jdbcType=VARCHAR},
                #{goodsprice,jdbcType=INTEGER}, #{goodsstock,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" keyColumn="goodsid" keyProperty="goodsid" parameterType="com.model.Goods"
            useGeneratedKeys="true">
        insert into goods
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="goodsname != null">
                goodsname,
            </if>
            <if test="goodsimg != null">
                goodsimg,
            </if>
            <if test="goodscontent != null">
                goodscontent,
            </if>
            <if test="goodsprice != null">
                goodsprice,
            </if>
            <if test="goodsstock != null">
                goodsstock,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="goodsname != null">
                #{goodsname,jdbcType=VARCHAR},
            </if>
            <if test="goodsimg != null">
                #{goodsimg,jdbcType=VARCHAR},
            </if>
            <if test="goodscontent != null">
                #{goodscontent,jdbcType=VARCHAR},
            </if>
            <if test="goodsprice != null">
                #{goodsprice,jdbcType=INTEGER},
            </if>
            <if test="goodsstock != null">
                #{goodsstock,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.model.Goods">
        update goods
        <set>
            <if test="goodsname != null">
                goodsname = #{goodsname,jdbcType=VARCHAR},
            </if>
            <if test="goodsimg != null">
                goodsimg = #{goodsimg,jdbcType=VARCHAR},
            </if>
            <if test="goodscontent != null">
                goodscontent = #{goodscontent,jdbcType=VARCHAR},
            </if>
            <if test="goodsprice != null">
                goodsprice = #{goodsprice,jdbcType=INTEGER},
            </if>
            <if test="goodsstock != null">
                goodsstock = #{goodsstock,jdbcType=INTEGER},
            </if>
        </set>
        where goodsid = #{goodsid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.model.Goods">
        update goods
        set goodsname    = #{goodsname,jdbcType=VARCHAR},
            goodsimg     = #{goodsimg,jdbcType=VARCHAR},
            goodscontent = #{goodscontent,jdbcType=VARCHAR},
            goodsprice   = #{goodsprice,jdbcType=INTEGER},
            goodsstock   = #{goodsstock,jdbcType=INTEGER}
        where goodsid = #{goodsid,jdbcType=INTEGER}
    </update>
</mapper>